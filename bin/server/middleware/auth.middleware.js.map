{"version":3,"sources":["../../../src/server/middleware/auth.middleware.js"],"names":["jwt","require","module","exports","checkuser","req","res","next","token","cookies","verify","err","decodedToken","locals","user","clearCookie","console","log","id","UserModel","findById","requireauth"],"mappings":";;AACA;;;;AADA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAIAC,MAAM,CAACC,OAAP,CAAeC,SAAf,GAA2B,CAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,KAAkB;AACzC,QAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYT,GAA1B;;AACA,MAAIQ,KAAJ,EAAU;AACNR,IAAAA,GAAG,CAACU,MAAJ,CAAWF,KAAX,EAAiB,cAAjB,EAAgC,OAAMG,GAAN,EAAUC,YAAV,KAAyB;AACrD,UAAGD,GAAH,EAAO;AACHL,QAAAA,GAAG,CAACO,MAAJ,CAAWC,IAAX,GAAkB,IAAlB;AACJR,QAAAA,GAAG,CAACS,WAAJ,CAAgB,KAAhB;AACJR,QAAAA,IAAI;AACN,OAJM,MAKH;AACGS,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAiBL,YAAY,CAACM,EAA1C;AAEA,YAAIJ,IAAI,GAAG,MAAMK,cAAUC,QAAV,CAAmBR,YAAY,CAACM,EAAhC,CAAjB;AACAZ,QAAAA,GAAG,CAACO,MAAJ,CAAWC,IAAX,GAAiBA,IAAjB;AACJE,QAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACO,MAAJ,CAAWC,IAAvB;AACAP,QAAAA,IAAI;AACH;AAEA,KAfD;AAiBH,GAlBD,MAkBK;AACDD,IAAAA,GAAG,CAACO,MAAJ,CAAWC,IAAX,GAAkB,IAAlB;AACAP,IAAAA,IAAI;AACP;AACJ,CAxBD;;AA0BAL,MAAM,CAACC,OAAP,CAAekB,WAAf,GAA6B,CAAChB,GAAD,EAAKC,GAAL,EAASC,IAAT,KAAkB;AAC3C,QAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYT,GAA1B;;AACA,MAAGQ,KAAH,EAAS;AACLR,IAAAA,GAAG,CAACU,MAAJ,CAAWF,KAAX,EAAiB,cAAjB,EAAgC,OAAOG,GAAP,EAAWC,YAAX,KAA0B;AACtD,UAAGD,GAAH,EAAO;AACHK,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACH,OAFD,MAGI;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACM,EAAzB;AACAX,QAAAA,IAAI;AACP;AACJ,KARD;AASH,GAVD,MAWK;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AACJ,CAhBD","sourcesContent":["const jwt = require('jsonwebtoken')\r\nimport UserModel from '../models/user.model';\r\n\r\n\r\nmodule.exports.checkuser = (req,res,next) => {\r\n    const token = req.cookies.jwt\r\n    if (token){\r\n        jwt.verify(token,\"TOKEN_SECRET\",async(err,decodedToken)=>{\r\n            if(err){\r\n                res.locals.user = null;\r\n            res.clearCookie('jwt') ;\r\n        next()  \r\n     }\r\n     else{\r\n            console.log('decoded token'+ decodedToken.id )\r\n\r\n            let user = await UserModel.findById(decodedToken.id);\r\n            res.locals.user =user\r\n        console.log(res.locals.user)  \r\n        next()  \r\n        }\r\n       \r\n        }\r\n        )\r\n    }else{\r\n        res.locals.user = null;\r\n        next()\r\n    }\r\n}\r\n\r\nmodule.exports.requireauth = (req,res,next) => {\r\n    const token = req.cookies.jwt\r\n    if(token){\r\n        jwt.verify(token,\"TOKEN_SECRET\",async (err,decodedToken)=>{\r\n            if(err){\r\n                console.log(err)\r\n            }\r\n            else{\r\n                console.log(decodedToken.id)\r\n                next()\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        console.log('no token')\r\n    }\r\n}"],"file":"auth.middleware.js"}