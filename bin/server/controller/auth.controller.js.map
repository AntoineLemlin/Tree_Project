{"version":3,"sources":["../../../src/server/controller/auth.controller.js"],"names":["jwt","require","module","exports","signUp","req","res","username","email","password","body","console","log","user","userModel","create","status","json","_id","err","errors","send","maxage","createToken","id","sign","expiresIn","signIn","login","token","cookie","httpOnly","logout","clearCookie","redirect"],"mappings":";;AAAA;;AAEA;;;;AADA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAGAC,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwB,OAAOC,GAAP,EAAWC,GAAX,KAAkB;AAC1C,QAAM;AAAEC,IAAAA,QAAF;AAAWC,IAAAA,KAAX;AAAiBC,IAAAA;AAAjB,MAA6BJ,GAAG,CAACK,IAAvC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACK,IAAhB;;AACA,MAAG;AACC,UAAMG,IAAI,GAAG,MAAMC,cAAUC,MAAV,CAAiB;AAACR,MAAAA,QAAD;AAAUC,MAAAA,KAAV;AAAgBC,MAAAA;AAAhB,KAAjB,CAAnB;AACAH,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACJ,MAAAA,IAAI,EAAEA,IAAI,CAACK;AAAZ,KAArB;AACH,GAHD,CAIA,OAAMC,GAAN,EAAU;AACN,UAAMC,MAAM,GAAG,yBAAaD,GAAb,CAAf;AACAb,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBK,IAAhB,CAAqB;AAACD,MAAAA;AAAD,KAArB;AACH;AACA,CAXD;;AAYA,MAAME,MAAM,GAAI,IAAI,EAAJ,GAAS,EAAT,GAAc,IAA9B;;AACA,MAAMC,WAAW,GAAIC,EAAD,IAAQ;AACxB,SAAOxB,GAAG,CAACyB,IAAJ,CAAS;AAACD,IAAAA;AAAD,GAAT,EAAe,cAAf,EAA+B;AAClCE,IAAAA,SAAS,EAAEJ;AADuB,GAA/B,CAAP;AAGH,CAJD;;AAMApB,MAAM,CAACC,OAAP,CAAewB,MAAf,GAAwB,OAAOtB,GAAP,EAAWC,GAAX,KAAmB;AACvC,QAAM;AAACE,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAmBJ,GAAG,CAACK,IAA7B;;AACA,MAAG;AACC,UAAMG,IAAI,GAAG,MAAMC,cAAUc,KAAV,CAAgBpB,KAAhB,EAAsBC,QAAtB,CAAnB;AACA,UAAMoB,KAAK,GAAGN,WAAW,CAACV,IAAI,CAACK,GAAN,CAAzB;AACAZ,IAAAA,GAAG,CAACwB,MAAJ,CAAW,KAAX,EAAiBD,KAAjB,EAAwB;AAACE,MAAAA,QAAQ,EAAE,IAAX;AAAiBT,MAAAA;AAAjB,KAAxB;AACAhB,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACJ,MAAAA,IAAI,EAAEA,IAAI,CAACK,GAAZ;AAAiBX,MAAAA,QAAQ,EAAEM,IAAI,CAACN;AAAhC,KAArB;AACH,GALD,CAKC,OAAMY,GAAN,EAAU;AACP,UAAMC,MAAM,GAAG,yBAAaD,GAAb,CAAf;AACAb,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,MAAAA;AAAF,KAArB;AACH;AACJ,CAXD;;AAYAlB,MAAM,CAACC,OAAP,CAAe6B,MAAf,GAAwB,OAAO3B,GAAP,EAAWC,GAAX,KAAkB;AACtCA,EAAAA,GAAG,CAAC2B,WAAJ,CAAgB,KAAhB;AACA3B,EAAAA,GAAG,CAAC4B,QAAJ,CAAa,GAAb;AACH,CAHD","sourcesContent":["import userModel from'../models/user.model'\r\nconst jwt = require('jsonwebtoken')\r\nimport {signUpErrors,signInErrors} from '../utils/error.utils'\r\n\r\nmodule.exports.signUp = async (req,res) =>{\r\nconst { username,email,password} = req.body\r\nconsole.log(req.body)\r\ntry{\r\n    const user = await userModel.create({username,email,password});\r\n    res.status(201).json({user: user._id})\r\n}\r\ncatch(err){\r\n    const errors = signUpErrors(err)\r\n    res.status(200).send({errors})\r\n}\r\n}\r\nconst maxage =  3 * 60 * 60 * 1000;\r\nconst createToken = (id) => {\r\n    return jwt.sign({id}, \"TOKEN_SECRET\", {\r\n        expiresIn: maxage\r\n    })\r\n};\r\n\r\nmodule.exports.signIn = async (req,res) => {\r\n    const {email,password} = req.body\r\n    try{\r\n        const user = await userModel.login(email,password);\r\n        const token = createToken(user._id)\r\n        res.cookie('jwt',token, {httpOnly: true, maxage})\r\n        res.status(200).json({user: user._id, username: user.username})\r\n    }catch(err){\r\n        const errors = signInErrors(err);\r\n        res.status(200).json({ errors });\r\n    }\r\n}\r\nmodule.exports.logout = async (req,res)=> {\r\n    res.clearCookie(\"jwt\");\r\n    res.redirect(\"/\")\r\n}"],"file":"auth.controller.js"}