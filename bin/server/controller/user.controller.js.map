{"version":3,"sources":["../../../src/server/controller/user.controller.js"],"names":["UserModel","require","ObjectID","Types","ObjectId","module","exports","getAllUsers","req","res","users","find","select","status","json","userInfo","console","log","params","isValid","id","send","findById","err","docs","updateUser","findOneAndUpdate","_id","$set","bio","body","new","upsert","setDefaultsOnInsert","message","deleteUser","deleteOne","exec"],"mappings":"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","sourcesContent":["const UserModel = require('../models/user.model')\r\nconst ObjectID = require('mongoose').Types.ObjectId;\r\n\r\n\r\n\r\nmodule.exports.getAllUsers = async (req,res) =>{\r\n    const users = await  UserModel .find().select('-password');\r\n    res.status(200).json(users);\r\n}\r\n\r\nmodule.exports.userInfo = (req,res)=>{\r\n    console.log(req.params)\r\n    if(!ObjectID.isValid(req.params.id))\r\n    return res.status(400).send('ID UNKNOW :' + req.params.id)\r\n     UserModel.findById(req.params.id,(err,docs)=> {\r\n         if (!err) res.send(docs);\r\n         else {\r\n             console.log('ID unknow')\r\n         }\r\n     }).select('-password')\r\n}\r\n\r\nmodule.exports.updateUser = async (req,res)=> {\r\n    if(!ObjectID.isValid(req.params.id))\r\n    return res.status(400).send('ID UNKNOW :' + req.params.id)\r\n    try{\r\n        await UserModel.findOneAndUpdate(\r\n        { _id : req.params.id},\r\n        {  \r\n            $set:{\r\n                bio: req.body.bio\r\n            }\r\n        },\r\n        {new: true ,upsert: true,setDefaultsOnInsert: true},\r\n        (err,docs)=>{\r\n            if (!err) {\r\n                return res.send(docs)\r\n            };\r\n            if (err) {\r\n                res.status(500).send({message: err});\r\n            }\r\n\r\n        }\r\n    )\r\n}catch(err){\r\n    return res.status(500).json({message: err})\r\n}\r\n}\r\nmodule.exports.deleteUser = async (req,res) => {\r\n    if(!ObjectID.isValid(req.params.id))\r\n    return res.status(400).send('ID UNKNOW :' + req.params.id)\r\n    try{\r\n        await UserModel.deleteOne({_id : req.params.id}).exec();\r\n        res.status(200).json({message: 'successfully delete.'})\r\n    }\r\n    catch (err) {\r\n        return res.status(500).json({ message: err})\r\n    }\r\n}"],"file":"user.controller.js"}