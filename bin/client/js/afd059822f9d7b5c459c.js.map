{"version":3,"file":"js/afd059822f9d7b5c459c.js","mappings":"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","sources":["webpack:///../../node_modules/@react-leaflet/core/esm/attribution.js","webpack:///../../node_modules/@react-leaflet/core/esm/component.js","webpack:///../../node_modules/@react-leaflet/core/esm/context.js","webpack:///../../node_modules/@react-leaflet/core/esm/control.js","webpack:///../../node_modules/@react-leaflet/core/esm/div-overlay.js","webpack:///../../node_modules/@react-leaflet/core/esm/element.js","webpack:///../../node_modules/@react-leaflet/core/esm/events.js","webpack:///../../node_modules/@react-leaflet/core/esm/generic.js","webpack:///../../node_modules/@react-leaflet/core/esm/grid-layer.js","webpack:///../../node_modules/@react-leaflet/core/esm/circle.js","webpack:///../../node_modules/@react-leaflet/core/esm/dom.js","webpack:///../../node_modules/@react-leaflet/core/esm/media-overlay.js","webpack:///../../node_modules/@react-leaflet/core/esm/layer.js","webpack:///../../node_modules/@react-leaflet/core/esm/pane.js","webpack:///../../node_modules/@react-leaflet/core/esm/path.js","webpack:///../../node_modules/react-leaflet/esm/MapContainer.js","webpack:///../../node_modules/react-leaflet/esm/Marker.js","webpack:///../../node_modules/react-leaflet/esm/Popup.js","webpack:///../../node_modules/react-leaflet/esm/TileLayer.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { createContext, useContext } from 'react';\nexport const CONTEXT_VERSION = 1;\nexport const LeafletContext = /*#__PURE__*/createContext(null);\nexport const LeafletProvider = LeafletContext.Provider;\nexport function useLeafletContext() {\n  const context = useContext(LeafletContext);\n\n  if (context == null) {\n    throw new Error('No context provided: useLeafletContext() can only be used in a descendant of <MapContainer>');\n  }\n\n  return context;\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nexport function createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = useRef(props.position);\n    const {\n      position\n    } = props;\n    useEffect(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    useEffect(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}","export function updateCircle(layer, props, prevProps) {\n  if (props.center !== prevProps.center) {\n    layer.setLatLng(props.center);\n  }\n\n  if (props.radius != null && props.radius !== prevProps.radius) {\n    layer.setRadius(props.radius);\n  }\n}","import { DomUtil } from 'leaflet';\n\nfunction splitClassName(className) {\n  return className.split(' ').filter(Boolean);\n}\n\nexport function addClassName(element, className) {\n  splitClassName(className).forEach(cls => {\n    DomUtil.addClass(element, cls);\n  });\n}\nexport function removeClassName(element, className) {\n  splitClassName(className).forEach(cls => {\n    DomUtil.removeClass(element, cls);\n  });\n}\nexport function updateClassName(element, prevClassName, nextClassName) {\n  if (element != null && nextClassName !== prevClassName) {\n    if (prevClassName != null && prevClassName.length > 0) {\n      removeClassName(element, prevClassName);\n    }\n\n    if (nextClassName != null && nextClassName.length > 0) {\n      addClassName(element, nextClassName);\n    }\n  }\n}","import { LatLngBounds } from 'leaflet';\nexport function updateMediaOverlay(overlay, props, prevProps) {\n  if (props.bounds instanceof LatLngBounds && props.bounds !== prevProps.bounds) {\n    overlay.setBounds(props.bounds);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    overlay.setOpacity(props.opacity);\n  }\n\n  if (props.zIndex != null && props.zIndex !== prevProps.zIndex) {\n    // @ts-ignore missing in definition but inherited from ImageOverlay\n    overlay.setZIndex(props.zIndex);\n  }\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      const options = props.pathOptions ?? {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { CONTEXT_VERSION, LeafletProvider } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nexport function useMapElement(mapRef, props) {\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (mapRef.current !== null && map === null) {\n      const instance = new LeafletMap(mapRef.current, props);\n\n      if (props.center != null && props.zoom != null) {\n        instance.setView(props.center, props.zoom);\n      } else if (props.bounds != null) {\n        instance.fitBounds(props.bounds, props.boundsOptions);\n      }\n\n      if (props.whenReady != null) {\n        instance.whenReady(props.whenReady);\n      }\n\n      setMap(instance);\n    }\n  }, [mapRef, map, props]);\n  return map;\n}\nexport function MapContainer({\n  children,\n  className,\n  id,\n  placeholder,\n  style,\n  whenCreated,\n  ...options\n}) {\n  const mapRef = useRef(null);\n  const map = useMapElement(mapRef, options);\n  const createdRef = useRef(false);\n  useEffect(() => {\n    if (map != null && createdRef.current === false && whenCreated != null) {\n      createdRef.current = true;\n      whenCreated(map);\n    }\n  }, [map, whenCreated]);\n  const [props] = useState({\n    className,\n    id,\n    style\n  });\n  const context = useMemo(() => map ? {\n    __version: CONTEXT_VERSION,\n    map\n  } : null, [map]);\n  const contents = context ? /*#__PURE__*/React.createElement(LeafletProvider, {\n    value: context\n  }, children) : placeholder ?? null;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: mapRef\n  }), contents);\n}","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);"],"names":["useAttribution","map","attribution","attributionRef","useRef","useEffect","current","attributionControl","removeAttribution","addAttribution","createContainerComponent","useElement","ContainerComponent","props","ref","instance","context","useImperativeHandle","children","value","forwardRef","createDivOverlayComponent","OverlayComponent","isOpen","setOpen","useState","update","contentNode","_contentNode","createPortal","createLeafComponent","LeafComponent","CONTEXT_VERSION","LeafletContext","createContext","LeafletProvider","Provider","useLeafletContext","useContext","Error","createControlHook","elementRef","positionRef","position","addTo","remove","setPosition","createDivOverlayHook","useLifecycle","eventHandlers","createElementHook","createElement","updateElement","propsRef","useEventHandlers","element","eventHandlersRef","on","off","createControlComponent","createInstance","useControl","createLayerComponent","useLayer","createOverlayComponent","useOverlay","createPathComponent","usePath","createTileLayerComponent","updateGridLayer","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","updateCircle","center","setLatLng","radius","setRadius","splitClassName","className","split","filter","Boolean","addClassName","forEach","cls","DomUtil","removeClassName","updateClassName","prevClassName","nextClassName","length","updateMediaOverlay","overlay","bounds","LatLngBounds","setBounds","useLayerLifecycle","layerContainer","addLayer","_context$layerContain","removeLayer","createLayerHook","withPane","pane","usePathOptions","optionsRef","pathOptions","options","setStyle","createPathHook","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","MapContainer","id","placeholder","style","whenCreated","mapRef","setMap","zoom","setView","fitBounds","boundsOptions","whenReady","useMapElement","createdRef","useMemo","__version","contents","Marker","ctx","overlayContainer","marker","icon","setIcon","zIndexOffset","setZIndexOffset","dragging","draggable","enable","disable","Popup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","openOn","bindPopup","_context$overlayConta","unbindPopup","TileLayer","url"],"sourceRoot":""}