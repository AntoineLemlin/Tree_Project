{"version":3,"file":"js/9d33ae076328674c648a.js","mappings":"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","sources":["webpack:///../../node_modules/@react-leaflet/core/esm/context.js","webpack:///../../node_modules/@react-leaflet/core/esm/element.js","webpack:///../../node_modules/@react-leaflet/core/esm/attribution.js","webpack:///../../node_modules/@react-leaflet/core/esm/events.js","webpack:///../../node_modules/@react-leaflet/core/esm/layer.js","webpack:///../../node_modules/@react-leaflet/core/esm/generic.js","webpack:///../../node_modules/@react-leaflet/core/esm/component.js","webpack:///../../node_modules/@react-leaflet/core/esm/div-overlay.js","webpack:///../../node_modules/@react-leaflet/core/esm/pane.js","webpack:///../../node_modules/react-leaflet/esm/MapContainer.js","webpack:///../../node_modules/react-leaflet/esm/Marker.js","webpack:///../../node_modules/react-leaflet/esm/Popup.js","webpack:///../../node_modules/react-leaflet/esm/TileLayer.js","webpack:///../../node_modules/@react-leaflet/core/esm/grid-layer.js"],"sourcesContent":["import { createContext, useContext } from 'react';\nexport const CONTEXT_VERSION = 1;\nexport const LeafletContext = /*#__PURE__*/createContext(null);\nexport const LeafletProvider = LeafletContext.Provider;\nexport function useLeafletContext() {\n  const context = useContext(LeafletContext);\n\n  if (context == null) {\n    throw new Error('No context provided: useLeafletContext() can only be used in a descendant of <MapContainer>');\n  }\n\n  return context;\n}","import { useEffect, useRef } from 'react';\nexport function createElementHook(createElement, updateElement) {\n  if (updateElement == null) {\n    return function useImmutableLeafletElement(props, context) {\n      return useRef(createElement(props, context));\n    };\n  }\n\n  return function useMutableLeafletElement(props, context) {\n    const elementRef = useRef(createElement(props, context));\n    const propsRef = useRef(props);\n    const {\n      instance\n    } = elementRef.current;\n    useEffect(function updateElementProps() {\n      if (propsRef.current !== props) {\n        updateElement(instance, props, propsRef.current);\n        propsRef.current = props;\n      }\n    }, [instance, props, context]);\n    return elementRef;\n  };\n}","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n  const attributionRef = useRef(attribution);\n  useEffect(function updateAttribution() {\n    if (attribution !== attributionRef.current && map.attributionControl != null) {\n      if (attributionRef.current != null) {\n        map.attributionControl.removeAttribution(attributionRef.current);\n      }\n\n      if (attribution != null) {\n        map.attributionControl.addAttribution(attribution);\n      }\n    }\n\n    attributionRef.current = attribution;\n  }, [map, attribution]);\n}","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n  const eventHandlersRef = useRef();\n  useEffect(function addEventHandlers() {\n    if (eventHandlers != null) {\n      element.instance.on(eventHandlers);\n    }\n\n    eventHandlersRef.current = eventHandlers;\n    return function removeEventHandlers() {\n      if (eventHandlersRef.current != null) {\n        element.instance.off(eventHandlersRef.current);\n      }\n\n      eventHandlersRef.current = null;\n    };\n  }, [element, eventHandlers]);\n}","import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component';\nimport { createControlHook } from './control';\nimport { createElementHook } from './element';\nimport { createLayerHook } from './layer';\nimport { createDivOverlayHook } from './div-overlay';\nimport { createPathHook } from './path';\nexport function createControlComponent(createInstance) {\n  function createElement(props, context) {\n    return {\n      instance: createInstance(props),\n      context\n    };\n  }\n\n  const useElement = createElementHook(createElement);\n  const useControl = createControlHook(useElement);\n  return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n  const useElement = createElementHook(createElement);\n  const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n  return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const usePath = createPathHook(useElement);\n  return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n  const useElement = createElementHook(createElement, updateElement);\n  const useLayer = createLayerHook(useElement);\n  return createLeafComponent(useLayer);\n}","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, ref) {\n    const {\n      instance,\n      context\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, ref) {\n    const [isOpen, setOpen] = useState(false);\n    const {\n      instance\n    } = useElement(props, setOpen).current;\n    useImperativeHandle(ref, () => instance);\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]); // @ts-ignore _contentNode missing in type definition\n\n    const contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, ref) {\n    const {\n      instance\n    } = useElement(props).current;\n    useImperativeHandle(ref, () => instance);\n    return null;\n  }\n\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","import { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function createDivOverlayHook(useElement, useLifecycle) {\n  return function useDivOverlay(props, setOpen) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLifecycle(elementRef.current, context, props, setOpen);\n    return elementRef;\n  };\n}","export function withPane(props, context) {\n  const pane = props.pane ?? context.pane;\n  return pane ? { ...props,\n    pane\n  } : props;\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { CONTEXT_VERSION, LeafletProvider } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nexport function useMapElement(mapRef, props) {\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (mapRef.current !== null && map === null) {\n      const instance = new LeafletMap(mapRef.current, props);\n\n      if (props.center != null && props.zoom != null) {\n        instance.setView(props.center, props.zoom);\n      } else if (props.bounds != null) {\n        instance.fitBounds(props.bounds, props.boundsOptions);\n      }\n\n      if (props.whenReady != null) {\n        instance.whenReady(props.whenReady);\n      }\n\n      setMap(instance);\n    }\n  }, [mapRef, map, props]);\n  return map;\n}\nexport function MapContainer({\n  children,\n  className,\n  id,\n  placeholder,\n  style,\n  whenCreated,\n  ...options\n}) {\n  const mapRef = useRef(null);\n  const map = useMapElement(mapRef, options);\n  const createdRef = useRef(false);\n  useEffect(() => {\n    if (map != null && createdRef.current === false && whenCreated != null) {\n      createdRef.current = true;\n      whenCreated(map);\n    }\n  }, [map, whenCreated]);\n  const [props] = useState({\n    className,\n    id,\n    style\n  });\n  const context = useMemo(() => map ? {\n    __version: CONTEXT_VERSION,\n    map\n  } : null, [map]);\n  const contents = context ? /*#__PURE__*/React.createElement(LeafletProvider, {\n    value: context\n  }, children) : placeholder ?? null;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, props, {\n    ref: mapRef\n  }), contents);\n}","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","import { createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({\n  url,\n  ...options\n}, context) {\n  return {\n    instance: new LeafletTileLayer(url, withPane(options, context)),\n    context\n  };\n}, updateGridLayer);","export function updateGridLayer(layer, props, prevProps) {\n  const {\n    opacity,\n    zIndex\n  } = props;\n\n  if (opacity != null && opacity !== prevProps.opacity) {\n    layer.setOpacity(opacity);\n  }\n\n  if (zIndex != null && zIndex !== prevProps.zIndex) {\n    layer.setZIndex(zIndex);\n  }\n}"],"names":["CONTEXT_VERSION","LeafletContext","createContext","LeafletProvider","Provider","useLeafletContext","context","useContext","Error","createElement","updateElement","props","useRef","elementRef","propsRef","instance","current","useEffect","useAttribution","map","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","useEventHandlers","element","eventHandlers","eventHandlersRef","on","off","createLayerHook","useElement","layerContainer","addLayer","_context$layerContain","removeLayer","useLayerLifecycle","createLayerComponent","ContainerComponent","ref","useImperativeHandle","children","value","forwardRef","createOverlayComponent","useLifecycle","useOverlay","setOpen","createDivOverlayHook","OverlayComponent","isOpen","useState","update","contentNode","_contentNode","createPortal","createDivOverlayComponent","createTileLayerComponent","LeafComponent","withPane","pane","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","MapContainer","className","id","placeholder","style","whenCreated","options","mapRef","setMap","center","zoom","setView","bounds","fitBounds","boundsOptions","whenReady","useMapElement","createdRef","useMemo","__version","contents","Marker","position","ctx","overlayContainer","marker","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","Popup","onClose","onOpen","onPopupOpen","event","popup","onPopupClose","popupopen","popupclose","openOn","bindPopup","_context$overlayConta","unbindPopup","TileLayer","url","layer","zIndex","setZIndex"],"sourceRoot":""}