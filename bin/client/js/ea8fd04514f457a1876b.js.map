{"version":3,"file":"js/ea8fd04514f457a1876b.js","mappings":"+QAmBA,QAZoB,SAAC,GAAkB,I,IAAjBA,EAAiB,EAAjBA,YAClB,G,GAA0BC,EAAAA,EAAAA,WAAS,G,EAAnC,E,8zBAAOC,EAAP,KAAcC,EAAd,KACA,OACI,uBAAKC,UAAW,gBACZ,gBAACC,EAAA,EAAD,MACA,4BACKH,EAAQ,gBAACI,EAAA,EAAD,CAAOH,SAAUA,EAAUH,YAAaA,IAAiB,gBAACO,EAAA,EAAD,CAAUJ,SAAUA,O,6/BCqCtG,QAzCkB,SAAC,GAAe,IAAdK,EAAc,EAAdA,SAChB,KAA0BP,EAAAA,EAAAA,UAAS,IAAnC,GAAOQ,EAAP,KAAcC,EAAd,KACA,KAA8BT,EAAAA,EAAAA,WAAS,GAAvC,GAAOU,EAAP,KAAgBC,EAAhB,KAgBA,OANAC,EAAAA,EAAAA,YAAU,WAPNC,IAAAA,IAAU,aAAaC,MAAK,SAACC,GACzB,IAAMP,EAAQO,EAAIC,KAClBP,EAASD,GACTG,GAAW,QAQhB,IAGC,uBAAKR,UAAW,OACZ,gBAACC,EAAA,EAAD,MACA,wBAAMD,UAAWO,EAAU,WAAa,IACnCA,EACG,gBAAC,IAAD,CACIO,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,MAGX,gCACI,gBAAC,IAAD,CAAOC,UAAWb,IAClB,gBAACc,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,CAAShB,SAAUA,Q,87BCV3C,QA1BkB,WACf,SAA8BP,EAAAA,EAAAA,UAAS,MAAvC,GAAOwB,EAAP,KAAgBC,EAAhB,KACA,KAAgCzB,EAAAA,EAAAA,UAAS,MAAzC,GAAOO,EAAP,KAAiBR,EAAjB,KAeC,OAdDa,EAAAA,EAAAA,YAAU,WACNc,QAAQC,IAAIpB,GAEPM,GAAAA,CAAM,UACNC,MAAK,SAACC,GACHU,EAAWV,EAAIC,SAFlB,OAIO,SAACY,GAAD,OACHF,QAAQC,IAAI,sBAIxBD,QAAQC,IAAIH,KACV,IAEE,gBAAC,KAAD,KACI,2BACqB,OAAZA,EAAmB,gBAAC,EAAD,CAAazB,YAAaA,IAAiB,gBAAC,EAAD,CAAWQ,SAAUA","sources":["webpack:///./screens/LoginScreen.js","webpack:///./screens/MapScreen.js","webpack:///./routers/AppRouter.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport Login from \"../components/Login\";\r\nimport Register from \"../components/Register\";\r\n\r\nconst LoginScreen = ({setUsername}) => {\r\n    const [login, setLogin] = useState(true)\r\n    return (\r\n        <div className={\"login-screen\"}>\r\n            <Header />\r\n            <main>\r\n                {login ? <Login setLogin={setLogin} setUsername={setUsername}/> : <Register setLogin={setLogin}/> }\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Header from \"../components/Header\";\r\nimport Carte from \"../components/Map\";\r\nimport Statbar from \"../components/Statbar\";\r\nimport axios from \"axios\";\r\n\r\nconst MapScreen = ({username}) => {\r\n    const [trees, setTrees] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const getTrees = () => {\r\n        axios.get(\"/api/tree\").then((res) => {\r\n            const trees = res.data;\r\n            setTrees(trees);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        {\r\n            getTrees();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={\"app\"}>\r\n            <Header />\r\n            <main className={loading ? \"centered\" : \"\"}>\r\n                {loading ? (\r\n                    <Loader\r\n                        type=\"Oval\"\r\n                        color=\"#00BFFF\"\r\n                        height={100}\r\n                        width={100}\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <Carte listTrees={trees} />\r\n                        <Sidebar />\r\n                        <Statbar username={username}/>\r\n                    </>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapScreen;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {HashRouter, Route, Routes} from \"react-router-dom\";\r\nimport LoginScreen from \"../screens/LoginScreen\";\r\nimport MapScreen from \"../screens/MapScreen\";\r\nimport axios from \"axios\";\r\n\r\nconst AppRouter = () => {\r\n   const [session, setSession] = useState(null);\r\n   const [username, setUsername] = useState(null);\r\n   useEffect(() => {\r\n       console.log(username)\r\n       const fetchId = () => {\r\n            axios(\"/jwtid\")\r\n           .then((res) => {\r\n               setSession(res.data);\r\n            })\r\n            .catch((err) => \r\n                console.log(\"no token biatch\"))\r\n            \r\n       }\r\n    fetchId()\r\n    console.log(session)\r\n    },[])\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                    {session === null ? <LoginScreen setUsername={setUsername}/> : <MapScreen username={username}/>}\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n"],"names":["setUsername","useState","login","setLogin","className","Header","Login","Register","username","trees","setTrees","loading","setLoading","useEffect","axios","then","res","data","type","color","height","width","listTrees","Sidebar","Statbar","session","setSession","console","log","err"],"sourceRoot":""}