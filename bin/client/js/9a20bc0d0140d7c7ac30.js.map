{"version":3,"file":"js/9a20bc0d0140d7c7ac30.js","mappings":"+QAmBA,QAZoB,SAAC,GAAiB,I,IAAhBA,EAAgB,EAAhBA,WAClB,G,GAA0BC,EAAAA,EAAAA,WAAS,G,EAAnC,E,8zBAAOC,EAAP,KAAcC,EAAd,KACA,OACI,uBAAKC,UAAW,gBACZ,gBAACC,EAAA,EAAD,MACA,4BACKH,EAAQ,gBAACI,EAAA,EAAD,CAAOH,SAAUA,EAAUH,WAAYA,IAAgB,gBAACO,EAAA,EAAD,CAAUJ,SAAUA,O,6/BCqCpG,QAzCkB,WACd,SAA0BF,EAAAA,EAAAA,UAAS,IAAnC,GAAOO,EAAP,KAAcC,EAAd,KACA,KAA8BR,EAAAA,EAAAA,WAAS,GAAvC,GAAOS,EAAP,KAAgBC,EAAhB,KAgBA,OANAC,EAAAA,EAAAA,YAAU,WAPNC,IAAAA,IAAU,aAAaC,MAAK,SAACC,GACzB,IAAMP,EAAQO,EAAIC,KAClBP,EAASD,GACTG,GAAW,QAQhB,IAGC,uBAAKP,UAAW,OACZ,gBAACC,EAAA,EAAD,MACA,wBAAMD,UAAWM,EAAU,WAAa,IACnCA,EACG,gBAAC,IAAD,CACIO,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,MAGX,gCACI,gBAAC,IAAD,CAAOC,UAAWb,IAClB,gBAACc,EAAA,EAAD,MACA,gBAACC,EAAA,EAAD,U,0GChBxB,QArBkB,WACf,I,IAAA,G,GAA8BtB,EAAAA,EAAAA,UAAS,M,EAAvC,E,8zBAAOuB,EAAP,KAAgBxB,EAAhB,KAWC,OAVDY,EAAAA,EAAAA,YAAU,WACN,I,IAAa,yBAAG,6GACNC,MAAM,CACRY,OAAQ,MACRC,IAAK,SACLC,gBAAiB,SAJT,4CAQjB,IAEE,gBAAC,KAAD,KACI,2BACqB,KAAZH,EAAiB,gBAAC,EAAD,CAAaxB,WAAYA,IAAgB,gBAAC,EAAD","sources":["webpack:///./screens/LoginScreen.js","webpack:///./screens/MapScreen.js","webpack:///./routers/AppRouter.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport Login from \"../components/Login\";\r\nimport Register from \"../components/Register\";\r\n\r\nconst LoginScreen = ({setSession}) => {\r\n    const [login, setLogin] = useState(true)\r\n    return (\r\n        <div className={\"login-screen\"}>\r\n            <Header />\r\n            <main>\r\n                {login ? <Login setLogin={setLogin} setSession={setSession}/> : <Register setLogin={setLogin}/> }\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Header from \"../components/Header\";\r\nimport Carte from \"../components/Map\";\r\nimport Statbar from \"../components/Statbar\";\r\nimport axios from \"axios\";\r\n\r\nconst MapScreen = () => {\r\n    const [trees, setTrees] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const getTrees = () => {\r\n        axios.get(\"/api/tree\").then((res) => {\r\n            const trees = res.data;\r\n            setTrees(trees);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        {\r\n            getTrees();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={\"app\"}>\r\n            <Header />\r\n            <main className={loading ? \"centered\" : \"\"}>\r\n                {loading ? (\r\n                    <Loader\r\n                        type=\"Oval\"\r\n                        color=\"#00BFFF\"\r\n                        height={100}\r\n                        width={100}\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <Carte listTrees={trees} />\r\n                        <Sidebar />\r\n                        <Statbar />\r\n                    </>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapScreen;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {HashRouter, Route, Routes} from \"react-router-dom\";\r\nimport LoginScreen from \"../screens/LoginScreen\";\r\nimport MapScreen from \"../screens/MapScreen\";\r\n\r\nconst AppRouter = () => {\r\n   const [session, setSession] = useState(null);\r\n   useEffect(() => {\r\n       const fetchId = async() => {\r\n           await axios({\r\n               method: \"get\",\r\n               url: '/jwtid',\r\n               withCredentials: \"true\"\r\n           })\r\n       }\r\n    \r\n    },[])\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                    {session === \"\" ? <LoginScreen setSession={setSession}/> : <MapScreen/>}\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n"],"names":["setSession","useState","login","setLogin","className","Header","Login","Register","trees","setTrees","loading","setLoading","useEffect","axios","then","res","data","type","color","height","width","listTrees","Sidebar","Statbar","session","method","url","withCredentials"],"sourceRoot":""}